{"version":3,"sources":["ZenQuote.js","App.js","reportWebVitals.js","index.js"],"names":["ZenQuote","props","state","quote","isLoaded","axios","get","then","response","setTimeout","this","setState","data","bind","console","log","className","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRA2CeA,G,wDArCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CAACC,MAAM,GAAIC,UAAU,GAFpB,E,gEAKE,IAAD,OACfC,IAAMC,IAAI,8BAA8BC,MAAK,SAAAC,GACzCC,WACI,WACIC,KAAKC,SAAS,CAACR,MAAMK,EAASI,KAAMR,UAAU,KAChDS,KAAK,GACP,U,2CAMRC,QAAQC,IAAI,gC,+BAIZ,OACI,8BACKL,KAAKR,MAAME,SACZ,gCACA,oDACA,4BAAIM,KAAKR,MAAMC,WAEnB,qBAAKa,UAAU,iB,GA9BJC,c,MCORC,MARf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,EAAD,OCMSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9a6dccb1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport './ZenQuote.scss'\r\n\r\nclass ZenQuote extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {quote:\"\", isLoaded: false};\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"https://api.github.com/zen\").then(response=>{\r\n            setTimeout(\r\n                function(){\r\n                    this.setState({quote:response.data, isLoaded: true})\r\n                }.bind(this),\r\n                3000\r\n            );\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log(\"inside component id update\")\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.isLoaded ? \r\n                <div>\r\n                <h1>Always Remember...</h1>\r\n                <p>{this.state.quote}</p>\r\n            </div> :\r\n            <div className='loader' />}\r\n            </div>\r\n            \r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default ZenQuote;","import ZenQuote from './ZenQuote'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ZenQuote />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}